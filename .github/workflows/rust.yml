name: Windows Build & Release

on:
  push:
    branches: [ "main" ]
  workflow_dispatch:  # 可手动触发

jobs:
  build-windows:
    runs-on: windows-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Install Rust (nightly)
        uses: actions-rs/toolchain@v1
        with:
          toolchain: nightly
          target: x86_64-pc-windows-msvc
          override: true

      - name: Install Visual Studio Build Tools
        uses: microsoft/setup-msbuild@v1.1
        with:
          vs-version: 'latest'
          include-windows-sdk: true

      - name: Cache cargo registry
        uses: actions/cache@v3
        with:
          path: ~/.cargo/registry
          key: cargo-registry-${{ hashFiles('**/Cargo.lock') }}

      - name: Cache cargo git
        uses: actions/cache@v3
        with:
          path: ~/.cargo/git
          key: cargo-git-${{ hashFiles('**/Cargo.lock') }}

      - name: Build release
        run: cargo build --release

      - name: Prepare artifact
        run: |
          mkdir -p release
          copy target\release\*.exe release\
          copy target\release\*.dll release\

      - name: Upload build artifact
        uses: actions/upload-artifact@v4
        with:
          name: hk4e-patch-windows
          path: release\*

      - name: Create GitHub Release
        uses: ncipollo/release-action@v1
        with:
          tag: v${{ github.run_number }}
          name: "hk4e-patch-windows v${{ github.run_number }}"
          body: "Automated Windows build from GitHub Actions"
          draft: false
          prerelease: false
          artifacts: release\*
